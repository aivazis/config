#--------------------------------------------------------------------------
#
#                       Michael A.G. Aivazis
#                California Institute of Technology
#                   (C) 1999 All Rights Reserved
#
#--------------------------------------------------------------------------

# $Log: c.def,v $
# Revision 1.5  2000/09/27 00:33:10  cummings
# Changed compiler binary name from mpxlc to xlc, since we
# handle MPI linkage explicitly.  Simplified optimization
# flags by using -O4, which automatically sets many of the
# flags we were setting explicitly, such as -qipa and
# -qtune=auto.  Added profiling flag.  Fixed rule for
# generating dependency files using CC_MAKEDEPENDS_FILE
# macro.  This requires changing the file extension to .u
# for dependency files when using the IBM compiler.  Added
# *.i files to the list of files to be cleaned up; these
# files are an unneeded by-product of the way in which
# dependency files are generated by the compiler.
#
# Revision 1.4  2000/06/01 18:31:25  sharon
# removed -hot from CC_OPT_FLAGS , since xlc doesn't support it
#
# Revision 1.3  2000/05/17 23:37:26  aivazis
# Major update in the way defines and include paths are handled
#
# Revision 1.2  2000/05/16 22:34:52  sharon
# fixed IBM compilation flags. Now they apply to both the 604's and power3's
#
# Revision 1.1  1999/08/27 22:34:02  sharon
# added AIX-3.0 platform and IBM-3.6.6 compilers
#
# Revision 1.4  1999/06/24 22:18:13  aivazis
# Added headers
#

#
# Definitions for IBM C compiler
#
    CC_ID = IBM-3.6.6
#
# The name of the binary
#
    COMPILER_CC_NAME = xlc
#
# Command line options
#
    COMPILER_CC_FLAGS =
    COMPILER_CC_INCLUDES = $(DIR_COMPILER)/$(CC_ID)
    COMPILER_CC_DEFINES = CC_ID="$(CC_ID)"

    COMPILER_CC_SOFLAGS = 
#
    CC_OPT_FLAGS = -O4 -Q -qansialias -qstrict -qfloat=hssngl:fltint:rsqrt 
    CC_DEBUG_FLAGS = -g   # Debug flags
    CC_PROF_FLAGS = -pg   # Profiling flags
#
# When using the C compiler to preprocess
#
    COMPILER_CC_PREPROCESS = $(COMPILER_CC_NAME) -E
#
# When using the C compiler to make dependencies
#
    COMPILER_CC_DEPENDS = $(COMPILER_CC_NAME) -P -M
    CC_MAKEDEPENDS_FILE = true
    EXT_DEPEND = u
#
# When using the C compiler to link
#
    COMPILER_LCC_NAME = $(COMPILER_CC_NAME)
    COMPILER_LCC_FLAGS =
    COMPILER_LCC_LIBPATH =
#
# Clean up
#
    COMPILER_CC_CLEAN = so_locations *.i
    COMPILER_CC_DISTCLEAN =
#
# End of file
